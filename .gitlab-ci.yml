image: galacticfog/docker-sbt:1.12

stages:
- test
- publish
- deploy

cache:
  key: "$CI_PIPELINE_ID"
  untracked: false

variables:
  POSTGRES_DB: gestalt-meta
  POSTGRES_USER: gestaltdev
  POSTGRES_PASSWORD: letmein
  DATABASE_HOSTNAME: galacticfog-fat-postgres
  DATABASE_NAME: gestalt-meta
  DATABASE_PORT: "5432"
  DATABASE_USERNAME: gestaltdev
  DATABASE_PASSWORD: letmein
  DATABASE_TIMEOUT_MS: "5000"
  ROOT_USERNAME: root
  ROOT_PASSWORD: letmein
  DOCKER_IMG: "galacticfog/gestalt-meta"
  GESTALT_SECURITY_PROTOCOL: http
  GESTALT_SECURITY_HOSTNAME: galacticfog__gestalt-security
  GESTALT_SECURITY_PORT: "80"
  GESTALT_SECURITY_KEY: missing
  GESTALT_SECURITY_SECRET: missing
  GESTALT_APIGATEWAY: "http://no-gateway"
  GESTALT_LAMBDA: "http://no-lambda"
  RABBIT_HTTP_PROTOCOL: http
  RABBIT_HOST: no-rabbit
  RABBIT_PORT: "5672"
  RABBIT_HTTP_PORT: "15672"
  RABBIT_ROUTE: test-route
  RABBIT_EXCHANGE: policy

test:
  stage: test
  services:
    - galacticfog/fat-postgres:9.4
    #- galacticfog/gestalt-security:2.2.5-SNAPSHOT-b246c46b
  script:
    - sbt clean update test docker:stage
  artifacts:
    expire_in: 30 minutes
    paths:
    - target/docker/stage/

docker-publish:
  stage: publish
  services:
    - docker:dind
  script: 
    - VERSION=$(grep "^version" build.sbt | sed 's/.*:=[ ]*//' | sed 's/"//g')
    - DOCKER_TAG=${CI_BUILD_TAG-$VERSION-${CI_BUILD_REF:0:8}}
    - cd target/docker/stage
    - echo building $DOCKER_IMG:$DOCKER_TAG
    - docker build -t $DOCKER_IMG:$DOCKER_TAG .
    - docker push     $DOCKER_IMG:$DOCKER_TAG
    - docker rmi      $DOCKER_IMG:$DOCKER_TAG

github-publish:
  stage: publish
  script: 
    - git remote remove github || true
    - git remote add github https://$GITHUB_CREDENTIALS@github.com/GalacticFog/gestalt-meta.git
    - |
      if [ -z ${CI_BUILD_TAG} ]; then 
         git push github HEAD:$CI_BUILD_REF_NAME
      else 
         git push -f github $CI_BUILD_TAG
      fi
  only:
    - master
    - tags
  artifacts:

.deploy_template: &deploy_to_test
  image: galacticfog/gitlab-updater
  stage: deploy
  environment: test
  tags: 
    - test-cluster
  script: 
    - VERSION=$(grep "^version" build.sbt | sed 's/.*:=[ ]*//' | sed 's/"//g')
    - DOCKER_TAG=${CI_BUILD_TAG-$VERSION-${CI_BUILD_REF:0:8}}
    - /usr/local/bin/update-deployed-app.sh  marathon.mesos:8080 gestalt-test-tasks/meta  $DOCKER_IMG:$DOCKER_TAG
  allow_failure: true
  artifacts:

auto-deploy-master:
  <<: *deploy_to_test
  only: 
    - master

manual-deploy-non-master:
  <<: *deploy_to_test
  except: 
    - master
  when: manual
